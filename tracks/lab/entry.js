var cp = [
[102.20176,-278.1,102.20176,-222.48000000000002],
[159.8512,-273.12856,204.451592,-228.13328],
[163.00879999999998,-305.49344,205.635768,-260.103592],
[258.919592,-309.835032,212.34551199999999,-260.103592],
[256.94608,-239.1848,212.34551199999999,-238.00072],
[256.94608,-198.53128,212.74031200000002,-197.74192000000002],
[256.15672,-95.12136,212.34551199999999,-138.537768],
[223.00231200000002,-93.93736,178.79664000000002,-136.95904800000002],
[224.97576800000002,-52.889048,178.40192000000002,-53.283744],
[241.552952,-20.52412,177.612488,4.736328],
[240.76359200000002,58.41476,194.979048,58.809464],
[240.3688,123.934,194.584408,77.75480800000001],
[177.612488,124.32872,176.428408,77.360104],
[82.88584,124.72344000000001,83.28056,89.59568],
[41.442904000000006,130.24912,28.023312,89.99032000000001],
[18.155944,155.114952,-15.787784,122.3552],
[4.736328,193.400232,-56.441296,136.169512],
[-39.469432000000005,206.03048800000002,-69.071504,177.217768],
[-74.59724800000001,238.39544,-97.88424,202.083592],
[-130.64376,255.762,-135.77487200000002,213.134952],
[-187.87456,251.02559200000002,-176.428408,208.79335999999998],
[-240.3688,225.37048800000002,-209.97744,193.005688],
[-269.576248,189.45336,-233.659048,167.745128],
[-290.100312,142.87936,-247.86808,132.61728],
[-292.46856,75.386632,-251.02559200000002,75.386632],
[-299.57312800000005,28.023312,-253.39376800000002,37.890664],
[-257.34072000000003,-20.918808000000002,-238.00072,18.550648000000002],
[-187.085128,-15.39308,-213.134952,22.102896],
[-167.350408,33.943712,-197.74192000000002,88.80624],
[-110.11976,41.048216000000004,-148.405128,91.56912],
[-86.41568,68.01752,-128.22984,107.60144000000001],
[-52.256832,102.74224000000001,-92.99936,142.156232],
[-7.9713840000000005,150.12759200000002,-46.499704,185.998872],
[43.399736,200.613128,2.21428,241.798408],
[78.385232,223.64144000000002,69.52816,304.68384000000003],
[90.34232000000002,221.42720000000003,129.31344,300.69816],
[194.413048,219.65584,141.71344,300.25544],
[208.058232,253.31272,208.501128,299.70728],
[232.045128,248.393688,282.09831199999996,298.483752],
[231.67928,220.10920000000002,283.42672,169.6132],
[189.54176800000002,216.55584,189.98456,169.6132],
[102.74224000000001,215.67016,166.51328,169.170312],
[98.31367999999999,107.17072,172.270408,108.05648],
[96.54224,62.442488,172.270408,61.113912],
[92.99936,-10.185647999999999,170.94184,-11.07136],
[93.44232000000001,-71.742416,163.41328000000001,-141.27056],
[-2.65712,-74.399536,44.28544,-163.41328000000001],
[-5.757104,-179.35608,42.071168,-179.79887200000002],
[-5.757104,-274.126872,69.75564800000001,-196.919688],
[57.571072,-275.455528,78.80648,-215.21951199999998]]
var startPos = new THREE.Vector3(97.33503999999999,55.620000000000005,-250.29)
var startTheta = 1.5707963267948966
var trackFile='./tracks/lab/course.glb'
var collisionFile='./tracks/lab/kcl.glb'
var vrFile='./tracks/lab/vrcorn.glb'
var trackName='lab'
var numLaps = 3
var floorName = []
var wallName = []
var water, swater, cube, boost
var boosts = []
var materials = [];
var floor = []
var walls = []
var trackShadow
var collision = new THREE.Scene();
var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10000)
//camera.layers.set(5)


var rp = []
//Initiate the THREE js context
scene = new THREE.Scene()


loader = new THREE.GLTFLoader()
loader.load(trackFile, function(gltf, err) {
  console.log(err);
  root = gltf.scene;
  gltf.scene.traverse(function(node) {
    if(false&&(node instanceof THREE.Mesh && node.geometry.attributes.uv2)){
      console.log(`${node.name} has 2 uvs`);
      node.material = material
    }else if (node instanceof THREE.Mesh){
      node.material = flatMat(node.material.map);
    }
  })
  scene.add(root);
  count(3)
  finalize();
  animate()
});

loader.load(collisionFile,function(gltf,err){
  console.log(err);
  root = gltf.scene;
  root.traverse(function(node){
    if(node.name[0]=="r"||node.name[0]=="o"){
      node.name = node.name.toUpperCase();
      floor.push(node);
    }
    if(node.name.substring(0,4)=="fall"){
      node.name = "D" + node.name;
      floor.push(node);
    }
    if(node.name[0]=="w"){
      walls.push(node);
    }
    if(node.name.substring(0,4)=='fast'){
      node.name = "B" + node.name
      boosts.push(node.name);
      floor.push(node);
    }
    node.layers.set(5);
  })
  scene.add(root)
})

loader.load(vrFile,function(gltf,err){
  console.log(err);
  gltf.scene.traverse(function(node){
    if (node instanceof THREE.Mesh){
      node.material = flatMat(node.material.map);
    }
  })
  scene.add(gltf.scene);
})


function finalize(){
  composer.addPass(THREE.AfterImagePass)
}

function update(){

}
